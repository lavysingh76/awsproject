Steps to install Laravel on Ubuntu 22.04 LTS Linux
The steps given here to set up the Laravel framework on  Ubuntu 22.04 will be the same for other versions of  Ubuntu such as 18.04 or 20.04 as well.

1: System update
First of all, update your system so that it could have the latest updates for security and the installed packages. This will also refresh the APT package manager index cache.

sudo apt update && sudo apt upgrade
Also, install git:

sudo apt install git
2. Install LAMP on Ubuntu 22.04
Laravel framework needs PHP to work. However, here we are also installing Apache, and MySQL on your Ubuntu Linux to serve pages of the app, generated on this framework using Apache whereas to save the data, we have MySQL. Hence, let’s first install the LAMP stack using the command given below.

sudo apt install apache2 mysql-server php php-gd php-mbstring php-xml php-zip php-curl
Once the installation is completed, you can check the services of Apache and MySQL are working without any errors or not.

For Apache:

systemctl status apache2 --no-pager -l
check Apache service status
For MySQL

systemctl status mysql --no-pager -l
MySQL Service status
3. Secure MySQL and create a Database
We need a Database to store the data generated by your Laravel app project, hence here we are using a MySQL Database server for that.

However, before creating a database, let’s secure our MySQL server.

Login to MySQL first:

sudo mysql
Set root password:

ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password by 'MyPassword@123';
Note: Change MyPassword@123 with the strong password, you want to set.

Exit:
Run the Secure Installation script again.

sudo mysql_secure_installation
The script will ask these questions.

Enter the password for user root: type your set password and then press ENTER.
Change the password for root? Press N, then ENTER.
Remove anonymous users? Press Y, then ENTER.
Disallow root login remotely? Press Y, then ENTER.
Remove the test database and access to it? Press Y, then ENTER.
Reload privilege tables now? Press Y, then ENTER.

Once done create a Database for Laravel:

sudo mysql
Now, use the given commands, one by one:

CREATE DATABASE yourdb;
CREATE USER 'youruser'@'localhost' IDENTIFIED BY 'password';
GRANT ALL ON yourdb.* to 'youruser'@'localhost';
FLUSH PRIVILEGES;
quit;

4. Install PHP Composer for Laravel
To install Laravel and the dependencies required by it to work properly, we need to use Composer. It is a library manager for PHP projects. Well, we can install Composer using the default package manager of our  Ubuntu 22.04, however, the version provided by it will not be the latest one. Therefore, here we are going for an installer script, officially provided by the developers of this PHP library management tool.

curl -sS https://getcomposer.org/installer | php
sudo mv composer.phar /usr/local/bin/composer
sudo chmod +x /usr/local/bin/composer
Install composer php on Ubuntu 22.04
5. Download the Laravel framework project
Let’s clone Laravel from its GitHub repository directly into our web root directory.

Switch to the web directory:

cd /var/www
Clone Laravel

sudo git clone https://github.com/laravel/laravel.git
6. Install Laravel on Ubuntu 22.04
Once you have downloaded Laravel on your system, switch to its directory and use the Composer to start the installation process.

cd /var/www/laravel
Use the Composer

sudo composer install
Once the installation is completed the change permission to files :

sudo chown -R www-data.www-data /var/www/laravel
sudo chmod -R 755 /var/www/laravel
sudo chmod -R 777 /var/www/laravel/storage
—–From here onwards we will show how to set it up for accessing the Laravel app using Apache——

7. Create the Laravel environment configuration file
We already have an example environment file, let’s use it to create one for our Laravel app.

While inside the Laravel directory, run:

sudo cp .env.example .env
Generate an encryption key for your app:

php artisan key:generate
Add the Database details:

sudo nano .env
Go to the database section and change the values:

Add Database details Laravel app
Save the file using Ctrl+O, hit the Enter key, and then exit the file using Ctrl+X.

8. Apache Configuration for PHP Laravel App
Edit the default Apache configuration file and change the web root document directory path. This will point it to serve the files provided by Laravel instead of the default Apache page.

sudo nano /etc/apache2/sites-enabled/000-default.conf
Edit :

<VirtualHost *:80>

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/laravel/public

        <Directory />
                Options FollowSymLinks
                AllowOverride None
        </Directory>
        <Directory /var/www/laravel>
                AllowOverride All
        </Directory>

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

</VirtualHost>
Save the file and restart the Apache.

sudo systemctl restart apache2
9. Get the app’s demo page
We have configured the Laravel PHP framework to access through the Apache web server over port 80. Hence, simply open your system’s browser that can access the ip-address of  Ubuntu 22.04 where you have installed Laravel, and point it to it.

For example:

//problem


laravel the requested url was not found on this server
Asked 9 years, 4 months ago
Modified 1 year, 2 months ago
Viewed 270k times
105

I've an Ubuntu 14.04 kernel. I was installing my Laravel application in this server. After installing, I tried to set the root directory to public.

sudo nano /etc/apache2/sites-available/000-default.conf
I have only these options in the file

<VirtualHost *:80>
        # The ServerName directive sets the request scheme, hostname and port t$
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html/public/

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
I've changed the Document root to

DocumentRoot /var/www/html/public/
Now when I tried to access my Laravel App, through 123.xxx.xxx.xxx/ it shows the home page and working well. It gets all the GET variable too. Eg: 123.xxx.xxx.xxx?type=wefwef

But when I go to other links such as 123.xxx.xxx.xxx/login it gives me an error

Not Found

The requested URL /login/ was not found on this server.

Apache/2.4.7 (Ubuntu) Server at 104.236.234.85 Port 80
I have the routes.php working well on localhost. But not on this server. Please help me.

apacheubuntularavellaravel-4
Share
Improve this question
Follow
asked Jan 30, 2015 at 18:35
user1012181's user avatar
user1012181
8,6761111 gold badges6868 silver badges108108 bronze badges
6
Does 123.xxx.xxx.xxx/index.php/login work? – 
lukasgeiter
 Jan 30, 2015 at 18:38
6
I had the exact same problem and the accepted answer didn't work for me, turns out I had forgotten to enable modrewrite. Some other answers cover all the bases. On Ubuntu you just sudo a2enmod rewrite, but my thing is on an Apple MacBook so I had to find and uncomment the modrewrite line in /etc/apache2/httpd.conf. – 
kaan_a
 May 16, 2019 at 15:14
Add a comment
14 Answers
Sorted by:

Highest score (default)
206

This looks like you have to enable .htaccess by adding this to your vhost:

<Directory /var/www/html/public/>
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
</Directory>
If that doesn't work, make sure you have mod_rewrite enabled.

Don't forget to restart apache after making the changes! (service apache2 restart)

Share
Improve this answer
Follow
edited Jan 30, 2015 at 18:47
answered Jan 30, 2015 at 18:41
lukasgeiter's user avatar
lukasgeiter
151k2727 gold badges344344 silver badges276276 bronze badges
4
Alright, it worked. Just needed an service apache2 restart too. Thanks a lot :) – 
user1012181
 Jan 30, 2015 at 18:45
where .htacces i can find? Sorry for stupid question, but i can't find :) – 
MilanNz
 Mar 11, 2015 at 12:30
2
@MilanNz The .htaccess can be found in the public directory of your application. However the code from this answer goes inside a vhost file. The location of that depends on your server. (e.g. for apache2 and unix it's usually at /etc/apache2/sites-available) – 
lukasgeiter
 Mar 11, 2015 at 12:32
The FollowSymLinks seemed to be key for me. – 
MattCochrane
 Jan 22, 2016 at 7:44
19
Run sudo a2enmod rewrite to enable mod_rewrite – 
Cepheus
 Oct 4, 2018 at 6:57
Show 4 more comments

Report this ad
142

I resolved by doing the following: Check if there is a module called rewrite.load in your apache at:

cd /etc/apache2/mods-enabled/
If it does not exist execute the following excerpt:

sudo a2enmod rewrite
Otherwise, change the Apache configuration file to consolidate use of the "friendly URL".

sudo nano /etc/apache2/apache2.conf
Find the following code inside the editor:

<Directory /var/www/> 
   Options Indexes FollowSymLinks
   AllowOverride None
   Require all granted
</Directory> 
Change to:

<Directory /var/www/> 
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
</Directory>
After that restart the Apache server via:

sudo /etc/init.d/apache2 restart
Share
Improve this answer
Follow
edited Jan 12, 2019 at 19:43
touhid udoy's user avatar
touhid udoy
4,31822 gold badges2020 silver badges3333 bronze badges
answered Jan 11, 2018 at 0:02
Lucas Coelho's user avatar
Lucas Coelho
1,56211 gold badge1010 silver badges1414 bronze badges
3
Thanks, it worked for me too, in 2019. What does it mean though? – 
user3617088
 Feb 27, 2019 at 14:49
3
For some reasons, other commands to activate the rewrite didn't work, but this one did. Thank you. – 
George Rappel
 Jun 3, 2019 at 19:31
1
Thank you soooo much my friend!!! I really appreciate your answer! You helped me a lot! Thank you! – 
Combine
 Oct 15, 2019 at 9:42
1
Yes. Its worked for me. I used it for my Laravel project. – 
Chandan Sharma
 Jan 27, 2020 at 14:13
1
Ubuntu 18.04, June 2020, Fixed the issue, thanks a lot! – 
Mark Kazakov
 Jun 4, 2020 at 6:06
Show 6 more comments
30

First enable a2enmod rewrite next restart the apache

/etc/init.d/apache2 restart
click here for answer these question

Share
Improve this answer
Follow
edited May 23, 2017 at 10:31
Community's user avatar
CommunityBot
111 silver badge
answered Oct 17, 2015 at 8:29
Mathesh Raj's user avatar
Mathesh Raj
68166 silver badges1515 bronze badges
Whilst this may theoretically answer the question, it would be preferable to include the essential parts of the answer here, and provide the link for reference. – 
Rohit Gupta
 Oct 17, 2015 at 8:49
@rohit i unable to update the answer here,click the above link you will find answer – 
Mathesh Raj
 Oct 17, 2015 at 9:58
Add a comment

Report this ad
13

Alternatively you could replace all the contents in your .htaccess file

Options +FollowSymLinks -Indexes
RewriteEngine On
RewriteCond %{HTTP:Authorization} .
RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^ index.php [L]
See the docs here. https://laravel.com/docs/5.8/installation#web-server-configuration

Share
Improve this answer
Follow
answered May 14, 2019 at 7:59
F KIng's user avatar
F KIng
51866 silver badges1111 bronze badges
Add a comment
10

For Ubunutu 18.04 inside a vagrant box ... This is what helped me

Ensure www-data has permissions to the .htaccess file

  
    sudo chown www-data.www-data .htaccess
  
edit the apache2 conf to allow for symlinks etc

  
    sudo nano /etc/apache2/apache2.conf
  
Add this to the file

<Directory /var/www/html/>
  Options Indexes FollowSymLinks
  AllowOverride all
  Require all granted
</Directory>
Expand snippet
Restart your apache2 server

sudo service apache2 restart
I hope this helps someone.

Share
Improve this answer
Follow
answered May 28, 2020 at 21:37
villageek's user avatar
villageek
42144 silver badges88 bronze badges
1
You're answer is also good to resolve this. all we need to do is AllowOverride all – 
PriyankMotivaras
 Jan 17, 2021 at 19:44
This is the most straightforward way to resolve this issue. – 
Cepheus
 May 29 at 8:29
Add a comment
3

In addition to all the answers if you still encounter some variation of the problem, edit the .env file and set APP_URL to your domain name as in:

 APP_URL=similar_to_my_avatar_link 
Share
Improve this answer
Follow
edited Feb 19, 2019 at 13:19
answered Feb 19, 2019 at 13:11
croppio.com's user avatar
croppio.com
1,87355 gold badges2828 silver badges4545 bronze badges
Add a comment
0

In httpd.conf file you need to remove #

#LoadModule rewrite_module modules/mod_rewrite.so
after removing # line will look like this:

LoadModule rewrite_module modules/mod_rewrite.so
And Apache restart

Share
Improve this answer
Follow
edited Oct 16, 2017 at 17:58
answered Oct 16, 2017 at 17:52
Masum billah's user avatar
Masum billah
98211 gold badge77 silver badges2525 bronze badges
Add a comment
0

too late.. but for the benefit you can edit your .htaccess file comment this line

  #  RewriteRule ^ index.php [L]
Share
Improve this answer
Follow
answered Oct 18, 2017 at 11:06
Ahmed khaled's user avatar
Ahmed khaled
6111 silver badge88 bronze badges
Add a comment
0

Make sure you have mod_rewrite enabled.

restart apache
and clear cookies of your browser for read again at .htaccess

Share
Improve this answer
Follow
answered Dec 19, 2017 at 0:57
Miguel Avila R.'s user avatar
Miguel Avila R.
911 bronze badge
Add a comment
0

I faced similar issue on my local machine (Windows 11), after few hours, I found that most of the applications now redirecting to HTTPS, and XAMPP has different configuration for secure virtualhost, after creating secure virtual host similar to non-ssl one, I solved this issue.

Share
Improve this answer
Follow
answered Apr 5, 2023 at 1:52
Akam's user avatar
Akam
1,1111616 silver badges2525 bronze badges
Add a comment
-1

I have faced the same problem in cPanel and I fixed my problem to add in .htaccess file below these line

# Handle Front Controller...
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^ index.php [L]
Share
Improve this answer
Follow
answered Feb 24, 2021 at 12:43
A.A Noman's user avatar
A.A Noman
5,25499 gold badges2626 silver badges4747 bronze badges
Add a comment
-1

Add the following to .htaccess in public folder.

<IfModule mod_rewrite.c>
    <IfModule mod_negotiation.c>
        Options -MultiViews -Indexes
    </IfModule>

    RewriteEngine On

    # Handle Authorization Header
    RewriteCond %{HTTP:Authorization} .
    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

    # Redirect Trailing Slashes If Not A Folder...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]

    # Handle Front Controller...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ index.php [L]
</IfModule>
Share
Improve this answer
Follow
answered Aug 22, 2021 at 4:39
ParisaN's user avatar
ParisaN
1,95222 gold badges2626 silver badges5757 bronze badges
Add a comment
-1

In current version of Apache in httpd.conf there are lines:

DocumentRoot "${SRVROOT}/htdocs"
<Directory "${SRVROOT}/htdocs">
   ...
</Directory>
instead of earlier here mentioned:

DocumentRoot /var/www/
<Directory /var/www/
   ...
</Directory>
It depends on your server's directory structure, but by default I guess it can look like this.

As was recommended, inside Directory tag I changed options like this:

    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
by default it was AllowOverride none. It helped.

And of course LoadModule rewrite_module modules/mod_rewrite.so in the same file should be switched on.

Share
Improve this answer
Follow

//for https in windos change firewall setting in ubato process